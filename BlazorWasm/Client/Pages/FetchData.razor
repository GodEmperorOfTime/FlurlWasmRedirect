@page "/fetchdata/{ClientName}"
@using BlazorWasm.Shared
@inject IEnumerable<IWeatherForecastClient> clients

<PageTitle>Weather forecast</PageTitle>

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from the server.</p>

@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Temp. (F)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in forecasts)
            {
                <tr>
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>@forecast.TemperatureC</td>
                    <td>@forecast.TemperatureF</td>
                    <td>@forecast.Summary</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {

  private WeatherForecast[]? forecasts;

  [Parameter] public string? ClientName { get; set; }

  protected async override Task OnParametersSetAsync()
  {
    var client = GetClient(ClientName);
    forecasts = await client.GetForecastsAsync();
  }

  IWeatherForecastClient GetClient(string? clientName)
  {
    try
    {
      return clients
        .First(c => string.Equals(c.Name, clientName, StringComparison.OrdinalIgnoreCase));
    }
    catch(InvalidOperationException ex)
    {
      throw new InvalidOperationException($"Unknown client '{clientName}'", ex);
    }
  }

}
